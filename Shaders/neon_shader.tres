[gd_resource type="Shader" format=3 uid="uid://vulfjm5l2hf6"]

[resource]
code = "shader_type canvas_item;

vec3 palette(float t) {
	vec3 a = vec3(.5,.5,.5);
	vec3 b = vec3(.5,.5,.5);
	vec3 c = vec3(1.,1.,1.);
	vec3 d = vec3(.263,.416,.557);
	return a + b * cos(TAU*(c*t + d));
}

float grayscale(vec4 v) {
	return (v.x+v.y+v.z)/3.;
}

void fragment() {
    vec2 ps = TEXTURE_PIXEL_SIZE;
	vec2 uv = 2. * UV - 1.;
	vec2 uv0 = uv;
	
	vec4 tex = texture(TEXTURE, UV);
	
	vec3 f = vec3(0.);
	
	for(float i = 0.; i < 4.0; ++i) {
		
	uv *= 1.5;
	uv = fract(uv);
	uv -= 0.5;
	
	float d = length(uv) * exp(-length(uv0));
	vec3 col = palette(length(uv0) + TIME * .4);
	d = sin(d*8. + TIME) / 8.;
	d = abs(d);
	
	d = pow(0.01 / d, 1.2);
	
	f += col * d;
	}
	COLOR = grayscale(tex) * vec4(f,1.);
}
"
